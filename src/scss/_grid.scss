/*
Based on YUI CSS Grids http://yuilibrary.com/yui/docs/cssgrids/
YUI 3.8.1 (build 5795) Copyright 2013 Yahoo! Inc. http://yuilibrary.com/license/
*/

.grid {
    letter-spacing: -0.31em;
    word-spacing: -0.43em
}

.grid.gutter > * {
    border-left: 10px solid transparent;
    border-right: 10px solid transparent;
}

.grid > * {
    display: inline-block;
    letter-spacing: normal;
    word-spacing: normal;
    vertical-align: top
}

@mixin units($size) {

    @include unit($size, 1, 1);
    @include unit($size, 1, 2);
    @include unit($size, 1, 3);
    @include unit($size, 2, 3);
    @include unit($size, 1, 4);
    @include unit($size, 3, 4);
    @include unit($size, 1, 5);
    @include unit($size, 2, 5);
    @include unit($size, 3, 5);
    @include unit($size, 4, 5);
    @include unit($size, 1, 6);
    @include unit($size, 5, 6);
    @include unit($size, 1, 8);
    @include unit($size, 3, 8);
    @include unit($size, 5, 8);
    @include unit($size, 7, 8);
    @include unit($size, 1, 12);
    @include unit($size, 5, 12);
    @include unit($size, 11, 12);

}

@mixin unit($size, $rel, $base) {
    @if $size == 'any' {
        @if $base == 1 {
            .unit-1 {
                display: block;
            }
        } @else {
            .unit-#{$rel}-#{$base} {
                width: 100% * $rel / $base;
            }
        }
    } @else {
        @if $base == 1 {
            .#{$size}-unit-1 {
                display: block;
            }
        } @else {
            .#{$size}-unit-#{$rel}-#{$base} {
                width: 100% * $rel / $base;
            }
        }
    }
}


@include units(any);

@include respond-to($only-small) {
    @include units(s);
}

@include respond-to($gte-medium) {
    @include units(m);
}

@include respond-to($gte-large) {
    @include units(l);
}
